{
    "id": "629df3057ad326b86f13d225",
    "type": "radio",
    "name": "TEST QI #1",
    "allowedTime": 300,
    "category": [
        "Culture générale"
    ],
    "isRandomResponseChecker": false,
    "difficulty": "Facile",
    "description": "<div class=\"ql-editor\"   data-placeholder=\"Contenu...\"><p>Vous  des problèmes semblables aux exemples qui vous sont proposés sur cette page.</p><p>Les lettres dans chaque série se suivent selon une certaine loi.</p><p>Pour chaque série de lettres vous devez trouvez cette loi et compléter la série par une suite de lettres référencée de 1 à 5 à droite sur la même ligne.</p><p>Exemple:</p><blockquote>A B A B A B A B</blockquote><p>Dans cet exemple, vous avez les séries: <em>AB AB AB AB</em></p><p>La prochaine lettre de la série est donc <strong>A</strong></p><p>Exemple 2:</p><blockquote>A A B B C C D D</blockquote><p>Dans cet exemple, vous avez les séries: AA <em>BB CC DD</em></p><p>La prochaine lettre de la série est donc <strong>E</strong></p><p>Exemple 3:</p><blockquote>A C E G I K M O</blockquote><h2>Quel est la prochaine lettre ?</h2></div>",
    "answers": [
        "<p>P</p>",
        "<p>Q</p>",
        "<p>R</p>"
    ],
    "isTrainingQuestion": false
}

//----------------------------------
const [loading, setLoading] = useState(false);
const [data, setData] = useState(null);
const fetchData = async () => {
  const API_BASE_URL = `http://localhost:5002/api/v1/evaluation/6e127695-4c2c-47d3-a9a0-2fa8244575cb/start/${currentPack.id}`;
  try {
    setLoading(true);
    const response = await axios.patch(API_BASE_URL, {
      hasHandicap: selectedValue,
    });
    await setData(response.data);
  } catch (error) {
    console.log(error);
  } finally {
    setLoading(false);
  }
};

useEffect(() => {
const fetchData = async () => {
  if (!assessmentData || currentPackIndex >= assessmentData.packs.length) {
    console.log("No more packs to process or assessmentData is missing");
    return;
  }

  const currentPack = assessmentData.packs[currentPackIndex];
  const API_BASE_URL = `http://localhost:5002/api/v1/evaluation/6e127695-4c2c-47d3-a9a0-2fa8244575cb/start/${currentPack.id}`;
  try {
    const response = await axios.patch(API_BASE_URL, {
      hasHandicap: selectedValue,
    });

    const data = response.data;

    setQuestion({
      numberOfQuestions: data?.numberOfQuestions || 0,
      currentQuestionCount: data?.currentQuestionCount || 0,
      type: data?.nextQuestion?.type || "",
      isTrainingQuestion: data?.nextQuestion?.isTrainingQuestion || false,
      name: data?.nextQuestion?.name || "",
      description: data?.nextQuestion?.description || "",
      answers: data?.nextQuestion?.answers || [],
    });
    if (
      !response.data.feedback &&
      response.data.hasNext &&
      !response.data.nextQuestion
    ) {
      setCurrentPackIndex((prev) => {
        console.log("currentPackIndex:", prev + 1);
        return prev + 1;
      });
    }
  } catch (error) {
    console.error("Error loading data:", error);
  }
};
fetchData()
},[assessmentData])

//----------------------------------
